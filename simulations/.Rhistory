ss_treat=100; ss_contr=100; ss_2=100; p_resp=c(0.1,0.2,0.4,0.6)
n_arms <- length(p_resp)
n_arms
# p_hat <- c(sum(runif(ss_contr)<p_resp[1])/ss_contr)
r_hat <- c(sum(runif(ss_contr)<p_resp[1]))
r_hat
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
m
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
mbin
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
r_hat
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
m_res
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
# p_hat <- c(p_hat,colSums(mbin)/ss_treat)
r_hat <- c(r_hat,colSums(mbin))
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
m_res
ss_treat=100; ss_contr=100; ss_2=100; p_resp=c(0.1,0.2,0.4,0.6); alpha=0.05
n_arms <- length(p_resp)
# p_hat <- c(sum(runif(ss_contr)<p_resp[1])/ss_contr)
r_hat <- c(sum(runif(ss_contr)<p_resp[1]))
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
m
r_hat
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
mbin
ss_treat
r_hat
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
# p_hat <- c(p_hat,colSums(mbin)/ss_treat)
r_hat <- c(r_hat,colSums(mbin))
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
m_res
r_hat
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat)
r_hat
c(r_hat,colSums(mbin))
r_hat
colSums(mbin)
m_res
combn(1:5,2)
combn(1:5,2, simplify = F)
combn(0:3,2, simplify = F)
list <- combn(0:3,2, simplify = F)
is.list(list)
as.vector(list)
as.matrix(list)
as.data.frame(list)
db_list<-as.data.frame(list)
which(db_list[1,])
db_list[1,]
which(db_list[1,]==0)
db_list[1,1:3]
db_list[,1:3]
n_arms <- length(p_resp)
r_hat <- c(sum(runif(ss_contr)<p_resp[1]))
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
r_hat <- c(r_hat,colSums(mbin))
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
# trend test
pval1 = CochranArmitageTest(m_res, alternative = "one.sided")$p.value
####################################################################
# Simulation function
# simulates a trial with three treatment arms (doses) and a control
# two stages
####################################################################
library(DescTools)
n_arms <- length(p_resp)
r_hat <- c(sum(runif(ss_contr)<p_resp[1]))
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
r_hat <- c(r_hat,colSums(mbin))
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
# trend test
pval1 = CochranArmitageTest(m_res, alternative = "one.sided")$p.value
# selecting the most promising arm
sel = which.max(r_hat[2:n_arms])
sel
# CLOSED-TEST FIRST STAGE
##########################
list2 <- combn(0:3,2, simplify = F)
list2
db_list2<-as.data.frame(list2)
db_list2
which(db_list2[1,]==sel)
sel
which(db_list2[2,]==sel)
# CLOSED-TEST FIRST STAGE
##########################
db_list2 <- as.data.frame(combn(0:3,2, simplify = F))
which(db_list2[2,]==sel)
db_list2[,db_list2_tests]
db_list2_tests <- which(db_list2[2,]==sel)
db_list2[,db_list2_tests]
####################################################################
# Simulation function
# simulates a trial with three treatment arms (doses) and a control
# two stages
####################################################################
library(DescTools)
ss_treat=100; ss_contr=100; ss_2=100; p_resp=c(0.1,0.2,0.4,0.6); alpha=0.05
n_arms <- length(p_resp)
r_hat <- c(sum(runif(ss_contr)<p_resp[1]))
#
m <- matrix(runif((n_arms-1)*ss_treat), ncol = n_arms-1)
mbin <- matrix(NA, ncol = n_arms-1, nrow = ss_treat)
for(i in 1:(n_arms-1)){
mbin[,i] = m[,i]<p_resp[i+1]
}
r_hat <- c(r_hat,colSums(mbin))
m_res <- matrix(
c(c(ss_contr,rep(ss_treat,3)) - r_hat, r_hat),
byrow = T,
nrow = 2,
dimnames = list(resp = 0:1, dose = 0:(n_arms - 1))
)
# trend test
pval1 = CochranArmitageTest(m_res, alternative = "one.sided")$p.value
# selecting the most promising arm
sel = which.max(r_hat[2:n_arms])
sel
